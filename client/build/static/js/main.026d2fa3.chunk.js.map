{"version":3,"sources":["context/AuthContext.js","hooks/message.hook.js","hooks/http.hook.js","pages/CreatePage.js","components/Loader.js","components/LinkCard.js","pages/DetailPage.js","components/LinksList.js","pages/LinksPage.js","pages/AuthPage.js","hooks/auth.hook.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useMessage","useCallback","text","window","M","toast","html","useHttp","useState","loading","setLoading","error","setError","auth","useContext","history","useHistory","message","request","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","push","Error","clearError","CreatePage","link","setLink","useEffect","updateTextFields","pressHandler","event","key","target","id","from","Authorization","_id","className","type","value","onChange","e","onKeyPress","htmlFor","onClick","Loader","LinkCard","href","to","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","fetched","LinksList","links","sortHandler","preventDefault","length","disabled","slice","reverse","map","index","LinksPage","setLinks","fetchLinks","AuthPage","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","storageName","Navbar","logoutHandler","data-target","elems","document","querySelectorAll","Sidenav","init","draggable","preventScrolling","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.026d2fa3.chunk.js","sourcesContent":["import {createContext} from 'react'\n\nfunction noop() {}\n\nexport const AuthContext = createContext({\n    token: null,\n    userId: null,\n    login: noop,\n    logout: noop,\n    isAuthenticated: false\n})","import { useCallback } from \"react\"\n\n\nexport const useMessage = () => {\n    return useCallback(text => {\n        if (window.M && text){\n            window.M.toast({ html: text })\n        }\n    }, [])\n}","import { useState, useCallback, useContext } from \"react\"\nimport { AuthContext } from \"../context/AuthContext\"\nimport {useHistory} from 'react-router-dom'\nimport {useMessage} from '../hooks/message.hook'\n\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const auth = useContext(AuthContext)\n    const history = useHistory()\n    const message = useMessage()\n\n    // const loginExpired = () => {\n    //     message('Час сесії минув, пройдіть авторизацію')\n    //     auth.logout()\n    //     history.push('/')\n    // }\n\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\n        setLoading(true)\n        try {\n            if(body){\n                body = JSON.stringify(body)\n                headers['Content-Type'] = 'application/json'\n            }\n            const response = await fetch(url, {method, body, headers})\n            const data = await response.json()\n\n            if (!response.ok) {\n                if (!auth.isAuthenticated) {\n                    message('Час сесії минув, пройдіть авторизацію')\n                    auth.logout()\n                    history.push('/')\n                }\n                throw new Error(data.message || 'Щось пішло не так або час сесії користувача минув')\n            }\n\n            setLoading(false)\n\n            return data\n        } catch (e) {\n            setLoading(false)\n            setError(e.message)\n            throw e\n        }\n    }, [auth, message, history])\n\n    const clearError = useCallback(() => setError(null), [])\n\n    return { loading, request, error, clearError }\n}","import React, {useContext, useEffect, useState} from 'react'\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\nimport {AuthContext} from '../context/AuthContext'\nimport { useHistory } from 'react-router-dom'\n\nexport const CreatePage = () => {\n    const message = useMessage()\n    const history = useHistory()\n    const auth = useContext(AuthContext)\n    const {request} = useHttp()\n    const [link, setLink] = useState('')\n \n    useEffect(() => {\n        window.M.updateTextFields()\n        \n    }, [])\n\n    const pressHandler = async event => {\n        if(event.key === 'Enter' || event.target.id === \"createLink\"){\n            try {\n                const data = await request('/api/link/generate', 'POST', {from: link}, {\n                    Authorization: `Bearer ${auth.token}`\n                })\n                message('Створено скорочене посилання')\n                history.push(`/detail/${data.link._id}`)\n            } catch (e) {}\n        }\n\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s12 m10 offset-m1 l6 offset-l3 createpage_container\">\n                <div className=\"card light-blue darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title center-align createpage_title\">Скоротити посилання</span>  \n                        <div className=\"input-field\">\n                            <i className=\"material-icons prefix\">link</i>\n                            <input \n                                id=\"link\" \n                                type=\"url\" \n                                className=\"input_white\"\n                                value={link}\n                                onChange={e => setLink(e.target.value)}\n                                onKeyPress={pressHandler}\n                            />\n                            <label htmlFor=\"link\">Вставте посилання і натисніть Enter</label>\n                        </div>\n                        <div className=\"center-align\">\n                            <button \n                                id=\"createLink\" \n                                className=\"btn grey lighten-4 black-text waves-effect waves-dark\"\n                                onClick={pressHandler}\n                                >\n                                Скоротити\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport const Loader = () => (\n    <div className=\"page_preloader\">\n        <div className=\"preloader-wrapper big active\">\n            <div className=\"spinner-layer spinner-blue\">\n            <div className=\"circle-clipper left\">\n            <div className=\"circle\"/>\n            </div><div className=\"gap-patch\">\n            <div className=\"circle\"/>\n            </div><div className=\"circle-clipper right\">\n            <div className=\"circle\"/></div>\n        </div>\n\n        <div className=\"spinner-layer spinner-yellow\">\n            <div className=\"circle-clipper left\">\n            <div className=\"circle\"/>\n            </div><div className=\"gap-patch\">\n            <div className=\"circle\"/>\n            </div><div className=\"circle-clipper right\">\n            <div className=\"circle\"/></div>\n        </div>\n        </div>\n    </div>\n)","import React from 'react'\n\nexport const LinkCard = ({ link }) => {\n    return (\n        <>\n            <h2>Деталі посилання</h2>\n\n            <p>Скорочене посилання: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\n            <div className=\"old_link_container\">\n                <div className=\"old_link_title\">\n                    Оригінальне посилання: \n                </div>\n                <div className=\"old_link_a_container\">\n                    <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\" className=\"old_link_a\">{link.from}</a>\n                </div>\n            </div>\n            <p>Кількість переходів за посиланням: <strong>{link.clicks}</strong></p>\n            <p>Дата створення: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\n        </>\n    )\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport { useHttp } from '../hooks/http.hook'\nimport { AuthContext } from '../context/AuthContext'\nimport { Loader } from '../components/Loader'\nimport { LinkCard } from '../components/LinkCard'\n\nexport const DetailPage = () => {\n    const {token} = useContext(AuthContext)\n    const {request, loading} = useHttp()\n    const [link, setLink] = useState(null)\n    // @ts-ignore\n    const linkId = useParams().id\n\n    const getLink = useCallback( async () => {\n        try {\n            const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setLink(fetched)\n        } catch (e) {}\n    }, [token, linkId, request])\n\n    useEffect(() => {\n        getLink()\n    }, [getLink])\n\n    if (loading){\n        return <Loader />\n    }\n\n    return (\n        <>\n            { !loading && link && <LinkCard link={link} /> }\n        </>\n    )\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { useHttp } from '../hooks/http.hook'\n\nexport const LinksList = ({ links }) => {\n\n    const { loading } = useHttp()\n\n    const sortHandler = event => {\n        event.preventDefault()\n    }\n\n    if (!links.length) {\n        return <h5 className=\"center\">У вас поки нема посилань</h5>\n    }\n    return (\n            <table className=\"striped\">\n            <thead>\n            <tr className=\"linklist_table_top\">\n                <th>\n                    <button \n                        className=\"btn grey lighten-4 black-text waves-effect waves-dark\"\n                        onClick={sortHandler}\n                        disabled={loading}\n                        >\n                            №\n                            <i className=\"material-icons prefix table_sort_arrow\">arrow_drop_down</i>\n                    </button>\n                </th>\n                <th>\n                    <button \n                        className=\"btn grey lighten-4 black-text waves-effect waves-dark\"\n                        onClick={sortHandler}\n                        disabled={loading}\n                        >\n                            Коротке посилання\n                            <i className=\"material-icons prefix table_sort_arrow\">arrow_drop_down</i>\n                    </button>\n                </th>\n                <th>\n                    <button \n                        className=\"btn grey lighten-4 black-text waves-effect waves-dark\"\n                        onClick={sortHandler}\n                        disabled={loading}\n                        >\n                            Оригінальне посилання\n                            <i className=\"material-icons prefix table_sort_arrow\">arrow_drop_down</i>\n                    </button>\n                </th>\n                <th>\n                    <button \n                        className=\"btn grey lighten-4 black-text waves-effect waves-dark\"\n                        onClick={sortHandler}\n                        disabled={loading}\n                        >\n                            Деталі\n                            <i className=\"material-icons prefix table_sort_arrow\">arrow_drop_down</i>\n                    </button>\n                </th>\n            </tr>\n            </thead>\n\n            <tbody>\n            { links.slice(0).reverse().map((link, index) => {\n                return (\n                <tr key={link._id}>\n                    <td>{index+1}</td>\n                    <td><a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\" className=\"old_link_a\">{link.to}</a></td>\n                    <td className=\"linkslist_oldlink\">\n                        <div className=\"linkslist_oldlink_inner\">\n                            <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\" className=\"old_link_a\">{link.from}</a>\n                        </div>\n                    </td>\n                    <td>\n                        <button className=\"btn light-blue darken-1 black-text waves-effect waves-light linklist_details\">\n                            <Link to={`/detail/${link._id}`} className=\"linklist_details_open\">Відкрити</Link>\n                        </button>\n                    </td>\n                </tr>\n                )\n            }) }\n            </tbody>\n        </table>\n    )\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\nimport { AuthContext } from '../context/AuthContext'\nimport { useHttp } from '../hooks/http.hook'\nimport { Loader } from '../components/Loader'\nimport { LinksList } from '../components/LinksList'\n\nexport const LinksPage = () => {\n    const [links, setLinks] = useState([])\n    const {loading, request} = useHttp()\n    const {token} = useContext(AuthContext)\n\n    const fetchLinks = useCallback( async () => {\n        try {\n            const fetched = await request('/api/link', 'GET', null, {\n                Authorization: `Bearer ${token}`\n            })\n            setLinks(fetched)\n        } catch (e) {}\n    }, [token, request])\n\n    useEffect(() => {\n        fetchLinks()\n    }, [fetchLinks])\n\n    if (loading) {\n        return <Loader />\n    }\n\n    return (\n        <>\n            { !loading && <LinksList links={ links }/> }\n        </>\n    )\n}","import React, {useContext, useEffect, useState} from 'react'\nimport {useHttp} from '../hooks/http.hook'\nimport {useMessage} from '../hooks/message.hook'\nimport { AuthContext } from '../context/AuthContext'\n\nexport const AuthPage = () => {\n    const auth = useContext(AuthContext)\n    const message = useMessage()\n    const { loading, request, error, clearError } = useHttp()\n    const [form, setForm]= useState({\n        email: '', password:''\n    })\n\n    useEffect(() => {\n        message(error)\n        clearError()\n    }, [error, message, clearError])\n\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n\n    const changeHandler = event => {\n        setForm({ ...form, [event.target.name]: event.target.value })\n    }\n\n    const registerHandler = async () => {\n        try {\n            const data = await request('/api/auth/register', 'POST', {...form})\n            message(data.message)\n        } catch (e) {}\n    }\n    \n    const loginHandler = async (event) => {\n        if(event.key === 'Enter' || event.target.id === \"loginUser\")\n        try {\n            const data = await request('/api/auth/login', 'POST', {...form})\n            message(data.message)\n            // @ts-ignore\n            auth.login(data.token, data.userId)\n        } catch (e) {}\n    }\n\n    /*const blurHandler = useCallback(() => {\n        \n    }, [])*/\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s12 m10 offset-m1 l6 offset-l3 center-align\">\n                <h1>SL1nk</h1>\n                <div className=\"card light-blue darken-1\">\n                    <div className=\"card-content white-text\">\n                        <span className=\"card-title center-align\">Авторизація</span>  \n                        <div>\n                            <div className=\"input-field\">\n                                <i className=\"material-icons prefix\">email</i>\n                                <input \n                                    id=\"email\" \n                                    type=\"text\" \n                                    name=\"email\"\n                                    className=\"input_white\"\n                                    value={form.email}\n                                    onChange={changeHandler}\n                                    onKeyPress={loginHandler}\n                                    //onBlur={blurHandler}\n                                />\n                                <label htmlFor=\"email\">Імейл</label>\n                            </div>\n                            <div className=\"input-field\">\n                                <i className=\"material-icons prefix\">lock</i>\n                                <input \n                                    id=\"password\" \n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"input_white\" \n                                    value={form.password}\n                                    onChange={changeHandler}\n                                    onKeyPress={loginHandler}\n                                    //onBlur={blurHandler}\n                                />\n                                <label htmlFor=\"password\">Пароль</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-action right-align\">\n                        <button \n                            id=\"loginUser\"\n                            className=\"btn yellow darken-2 waves-effect waves-light sign_in_btn\"\n                            onClick={loginHandler}\n                            disabled={loading}\n                        >\n                            Вхід\n                        </button>\n                        <button \n                            className=\"btn grey lighten-4 black-text waves-effect waves-dark\"\n                            onClick={registerHandler}\n                            disabled={loading}\n                        >\n                            Реєстрація\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import { useState, useCallback, useEffect } from 'react'\n\nconst storageName = 'userData'\n\nexport const useAuth = () => {\n    const [ token, setToken ] = useState(null)\n    const [ ready, setReady ] = useState(false)\n    const [ userId, setUserId ] = useState(null)\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken)\n        setUserId(id)\n\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: id, token: jwtToken\n        }))\n    }, [])\n    \n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(()=>{\n        const data = JSON.parse(localStorage.getItem(storageName))\n\n        if (data && data.token){\n            login(data.token, data.userId)\n        }\n        setReady(true)\n    }, [login])\n\n    return { login, logout, token, userId, ready }\n}","import { AuthContext } from 'context/AuthContext'\nimport React, { useContext } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport M from 'materialize-css'\n\nexport const Navbar = () => {\n    const history = useHistory()\n    const auth = useContext(AuthContext)\n\n    const logoutHandler = event => {\n        event.preventDefault()\n        auth.logout()\n        history.push('/')\n    }\n\n    const sidenavHandler = e => {\n        e.preventDefault()\n        const elems = document.querySelectorAll('.sidenav')\n        // @ts-ignore\n        M.Sidenav.init(elems, {draggable: true, preventScrolling: true})\n      }\n\n    return (\n        <nav>\n            <div className=\"nav-wrapper light-blue darken-1 page_navbar\">\n                <div className=\"container\">\n                        <span className=\"brand-logo\">SL1nk</span>\n                        <a href=\"/\" data-target=\"mobile-demo\" className=\"sidenav-trigger\" onClick={sidenavHandler}><i className=\"material-icons\">menu</i></a>\n                        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                            <li><NavLink to=\"/create\">Створити</NavLink></li>\n                            <li><NavLink to=\"/links\">Мої посилання</NavLink></li>\n                            <li><a href=\"/\" onClick={logoutHandler}>Вийти</a></li>\n                        </ul>\n                    <ul className=\"sidenav\" id=\"mobile-demo\">\n                        <li><NavLink to=\"/create\" className=\"sidenav-close\">Створити</NavLink></li>\n                        <li><NavLink to=\"/links\" className=\"sidenav-close\">Мої посилання</NavLink></li>\n                        <li><a href=\"/\" onClick={logoutHandler}>Вийти</a></li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}","import React from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from './routes'\nimport { useAuth } from './hooks/auth.hook'\nimport { AuthContext } from './context/AuthContext'\nimport { Navbar } from './components/Navbar'\nimport { Loader } from './components/Loader'\n\nfunction App() {\n  const { token, login, logout, userId, ready } = useAuth() \n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated)\n\n  if (!ready){\n    return <Loader />\n  }  \n\n\n  return (\n    <AuthContext.Provider value={{\n      token, login, logout, userId, isAuthenticated\n    }}>\n      <Router>\n        { isAuthenticated && <Navbar></Navbar>}\n        <div className=\"container\">\n          {routes}\n        </div>\n      </Router>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { CreatePage } from './pages/CreatePage'\nimport { DetailPage } from './pages/DetailPage'\nimport { LinksPage } from './pages/LinksPage'\nimport { AuthPage } from './pages/AuthPage'\n\nexport const useRoutes = isAuthenticated => {\n    if(isAuthenticated){\n        return(\n            <Switch>\n                <Route path=\"/links\" exact>\n                    <LinksPage/>\n                </Route>\n                <Route path=\"/create\" exact>\n                    <CreatePage/>\n                </Route>\n                <Route path=\"/detail/:id\" exact>\n                    <DetailPage/>\n                </Route>\n                <Redirect to=\"/create\"/>\n            </Switch>\n        )\n    }\n\n    return(\n        <Switch>\n            <Route path=\"/\" exact>\n                <AuthPage/>\n            </Route>\n            <Redirect to=\"/\"/>\n        </Switch>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style/mediastyle.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}